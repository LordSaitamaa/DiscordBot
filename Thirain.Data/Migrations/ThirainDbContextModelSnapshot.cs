// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Thirain.Data.TDBContext;

#nullable disable

namespace Thirain.Data.Migrations
{
    [DbContext(typeof(ThirainDbContext))]
    partial class ThirainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Thirain.Data.Models.Config", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("ChannelID")
                        .HasColumnType("bigint");

                    b.Property<string>("Commands")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ServerID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Config");
                });

            modelBuilder.Entity("Thirain.Data.Models.Event", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initiator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ServerID")
                        .HasColumnType("bigint");

                    b.Property<long?>("TemplateID")
                        .HasColumnType("bigint");

                    b.Property<int>("TemplateType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("TemplateID");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("Thirain.Data.Models.EventConfig", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("ServerID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("EventConfig");
                });

            modelBuilder.Entity("Thirain.Data.Models.EventManagerRoles", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("ConfigID")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("ConfigID");

                    b.ToTable("EventManagerRoles");
                });

            modelBuilder.Entity("Thirain.Data.Models.EventParticipants", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("EventID")
                        .HasColumnType("bigint");

                    b.Property<long>("SubRoleID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("EventID");

                    b.HasIndex("SubRoleID");

                    b.ToTable("EventParticipants");
                });

            modelBuilder.Entity("Thirain.Data.Models.EventRole", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("EmoteString")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("TemplateID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("TemplateID");

                    b.ToTable("EventRoles");
                });

            modelBuilder.Entity("Thirain.Data.Models.SubRole", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("EmoteString")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("RoleID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("SubRoles");
                });

            modelBuilder.Entity("Thirain.Data.Models.Template", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Inline")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ServerID")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("Thirain.Data.Models.Event", b =>
                {
                    b.HasOne("Thirain.Data.Models.Template", null)
                        .WithMany("Events")
                        .HasForeignKey("TemplateID");
                });

            modelBuilder.Entity("Thirain.Data.Models.EventManagerRoles", b =>
                {
                    b.HasOne("Thirain.Data.Models.EventConfig", "Config")
                        .WithMany("EventManagerRoles")
                        .HasForeignKey("ConfigID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Config");
                });

            modelBuilder.Entity("Thirain.Data.Models.EventParticipants", b =>
                {
                    b.HasOne("Thirain.Data.Models.Event", "Event")
                        .WithMany("EventParticipants")
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Thirain.Data.Models.SubRole", "SubRole")
                        .WithMany()
                        .HasForeignKey("SubRoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("SubRole");
                });

            modelBuilder.Entity("Thirain.Data.Models.EventRole", b =>
                {
                    b.HasOne("Thirain.Data.Models.Template", null)
                        .WithMany("EventRoles")
                        .HasForeignKey("TemplateID");
                });

            modelBuilder.Entity("Thirain.Data.Models.SubRole", b =>
                {
                    b.HasOne("Thirain.Data.Models.EventRole", "Role")
                        .WithMany("SubRoles")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Thirain.Data.Models.Event", b =>
                {
                    b.Navigation("EventParticipants");
                });

            modelBuilder.Entity("Thirain.Data.Models.EventConfig", b =>
                {
                    b.Navigation("EventManagerRoles");
                });

            modelBuilder.Entity("Thirain.Data.Models.EventRole", b =>
                {
                    b.Navigation("SubRoles");
                });

            modelBuilder.Entity("Thirain.Data.Models.Template", b =>
                {
                    b.Navigation("EventRoles");

                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
